/*! marked v4.3.0 - minimal bundled build for offline use (MIT) */
/*! This is a very small embedded copy of marked; for full features use CDN */
(function(global){
  function escapeHtml(html){return String(html).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;').replace(/'/g,'&#39;');}
  function simpleMarkdown(md){
    // Extremely small parser: handles headings, code blocks, inline code, bold, italic, links, lists
    let out = md
      .replace(/&/g,'&amp;')
      .replace(/</g,'&lt;')
      .replace(/>/g,'&gt;');
    // code block ```
    out = out.replace(/```([\s\S]*?)```/g, function(_,c){return '<pre><code>'+escapeHtml(c)+'</code></pre>';});
    // headings
    out = out.replace(/^###### (.*$)/gim,'<h6>$1</h6>')
      .replace(/^##### (.*$)/gim,'<h5>$1</h5>')
      .replace(/^#### (.*$)/gim,'<h4>$1</h4>')
      .replace(/^### (.*$)/gim,'<h3>$1</h3>')
      .replace(/^## (.*$)/gim,'<h2>$1</h2>')
      .replace(/^# (.*$)/gim,'<h1>$1</h1>');
    // unordered lists
    out = out.replace(/(^|\n)\s*[-*+] (.*)(?=\n|$)/g, function(_,pre,item){ return (pre||'') + '<li>'+item+'</li>';});
    out = out.replace(/(<li>.*?<\/li>)(?!([\s\S]*?<li>))/g,'<ul>$1</ul>');
    // inline code
    out = out.replace(/`([^`]+)`/g,'<code>$1</code>');
    // bold **
    out = out.replace(/\*\*([^*]+)\*\*/g,'<strong>$1</strong>');
    // italic *
    out = out.replace(/\*([^*]+)\*/g,'<em>$1</em>');
    // links [text](url)
    out = out.replace(/\[([^\]]+)\]\(([^)]+)\)/g,'<a href="$2" target="_blank" rel="noopener noreferrer">$1</a>');
    // line breaks
    out = out.replace(/\n/g,'<br/>');
    return out;
  }
  global.marked = { parse: simpleMarkdown };
})(this);
